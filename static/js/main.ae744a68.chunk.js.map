{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/Detail.js","components/App.js","apollo.js","index.js"],"names":["Container","styled","div","Poster","props","bg","id","to","Header","header","Title","h1","Subtitle","h2","Loading","Movies","GET_MOVIES","gql","useQuery","loading","data","movies","map","m","Movie","medium_cover_image","Column","h4","Description","p","GET_MOVIE","useParams","variables","parseInt","movie","title","language","rating","description_intro","App","exact","path","component","Home","Detail","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"wPAIMA,EAAYC,IAAOC,IAAV,kHAMTC,EAASF,IAAOC,IAAV,wKACgB,SAAAE,GAAK,OAAIA,EAAMC,MAO5B,kBAAGC,EAAH,EAAGA,GAAID,EAAP,EAAOA,GAAP,OACX,cAACL,EAAD,UACI,cAAC,IAAD,CAAMO,GAAE,WAAMD,GAAd,SACI,cAACH,EAAD,CAAQE,GAAIA,SCjBlBL,EAAYC,IAAOC,IAAV,oJAOTM,EAASP,IAAOQ,OAAV,4LASNC,EAAQT,IAAOU,GAAV,wDAILC,EAAWX,IAAOY,GAAV,kDAGRC,EAAUb,IAAOC,IAAV,4IAOPa,EAASd,IAAOC,IAAV,4PAYNc,EAAaC,YAAH,0IASD,aACX,MAA0BC,YAASF,GAA3BG,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KACjB,OACI,eAAC,EAAD,WACI,eAACZ,EAAD,WACI,cAACE,EAAD,4BACA,cAACE,EAAD,gCAEHO,GAAW,cAACL,EAAD,0BACVK,GAAWC,EAAKC,QACd,cAACN,EAAD,UACKK,EAAKC,OAAOC,KAAI,SAAAC,GAAC,OAAI,cAACC,EAAD,CAAkBlB,GAAIiB,EAAEjB,GAAID,GAAIkB,EAAEE,oBAAtBF,EAAEjB,aC7DlDN,EAAYC,IAAOC,IAAV,+LASTwB,EAASzB,IAAOC,IAAV,mEAINQ,EAAQT,IAAOU,GAAV,4EAILC,EAAWX,IAAO0B,GAAV,4EAIRC,EAAc3B,IAAO4B,EAAV,sNASX1B,EAASF,IAAOC,IAAV,0KACgB,SAAAE,GAAK,OAAIA,EAAMC,MAOrCyB,EAAYb,YAAH,qOAYA,aACX,IAAQX,EAAOyB,cAAPzB,GACR,EAA0BY,YAASY,EAAW,CAC1CE,UAAW,CAAE1B,GAAI2B,SAAS3B,MADtBa,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAGjB,OACI,eAAC,EAAD,WACI,eAACM,EAAD,WACI,cAAC,EAAD,UAAQP,EAAU,aAAeC,EAAKc,MAAMC,SAC1ChB,GAAWC,EAAKc,OACb,qCACG,eAAC,EAAD,WAAWd,EAAKc,MAAME,SAAtB,SAAmChB,EAAKc,MAAMG,UAC9C,cAACT,EAAD,UAAcR,EAAKc,MAAMI,0BAIrC,cAAC,EAAD,CAAQjC,GAAIe,GAAQA,EAAKc,MAAQd,EAAKc,MAAMT,mBAAqB,SC3D9Dc,MAPf,WACE,OAAO,eAAC,IAAD,WACL,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,cAAC,IAAD,CAAOF,KAAK,OAAOC,UAAWE,Q,wBCDnBC,EALA,IAAIC,IAAa,CAC5BC,IAAK,4BACLC,MAAO,IAAIC,MCEfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAgBR,OAAQA,EAAxB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,W","file":"static/js/main.ae744a68.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 400px;\n    width: 100%;\n    border-radius: 7px;\n    overflow: hidden;\n`;\nconst Poster = styled.div`\n    background-image: url(${props => props.bg});\n    height: 100%;\n    width: 100%;\n    background-size: cover;\n    background-position: center center;\n`;\n\nexport default ({ id, bg }) => (\n    <Container>\n        <Link to={`/${id}`}>\n            <Poster bg={bg}></Poster>\n        </Link>\n    </Container>\n);","import { useQuery, gql } from \"@apollo/client\";\nimport styled from \"styled-components\";\nimport Movie from \"../components/Movie\";\n\nconst Container = styled.div`\n    color: red;\n    text-align: center;\n    font-weight: bold;\n    background-color: black;\n    min-height: 100vh;\n`;\nconst Header = styled.header`\n    height: 170px;\n    width: 100%;\n    padding-top: 50px;\n    position: fixed;\n    z-index: 1;\n    box-sizing: border-box;\n    background-color: black;\n`;\nconst Title = styled.h1`\n    font-size: 50px;\n    \n`;\nconst Subtitle = styled.h2`\n    font-size: 25px;\n`;\nconst Loading = styled.div`\n    font-size: 25px;\n    opacity: 0.5;\n    font-weight: 500;\n    margin-top: 10px;\n    padding-top: 200px;\n`;\nconst Movies = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    grid-gap: 25px;\n    width: 100%;\n    position: relative;\n    padding: 30px;\n    padding-top: 200px;\n    box-sizing: border-box;\n`;\n\n\nconst GET_MOVIES = gql`\n    query {\n        movies(rating: 9.0) {\n            id\n            medium_cover_image\n        }\n    }\n`;\n\nexport default () => {\n    const { loading, data } = useQuery(GET_MOVIES);\n    return (\n        <Container>\n            <Header>\n                <Title>Apollo Movies</Title>\n                <Subtitle>I love GraphQL</Subtitle>\n            </Header>\n            {loading && <Loading>Loading...</Loading>}\n            {!loading && data.movies &&\n                <Movies>\n                    {data.movies.map(m => <Movie key={m.id} id={m.id} bg={m.medium_cover_image} />)}\n                </Movies>\n            }\n        </Container>\n    );\n};","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 100vh;\n    background-color: black;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white;\n`;\nconst Column = styled.div`\n    width: 500px;\n    padding: 20px;\n`;\nconst Title = styled.h1`\n    font-size: 65px;\n    margin-bottom: 15px;\n`;\nconst Subtitle = styled.h4`\n    font-size: 35px;\n    margin-bottom: 10px;\n`;\nconst Description = styled.p`\n    display: -webkit-box;\n    font-size: 28px;\n    height: 280px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    -webkit-line-clamp: 10;\n    -webkit-box-orient: vertical;\n`;\nconst Poster = styled.div`\n    background-image: url(${props => props.bg});\n    width: 300px;\n    height: 450px;\n    background-size: cover;\n    background-position: center center;\n`;\n\nconst GET_MOVIE = gql`\n    query getMovie($id: Int!) {\n        movie(id: $id) {\n            title\n            medium_cover_image\n            language\n            rating\n            description_intro\n        }\n    }\n`;\n\nexport default () => {\n    const { id } = useParams();\n    const { loading, data } = useQuery(GET_MOVIE, {\n        variables: { id: parseInt(id) }\n    });\n    return (\n        <Container>\n            <Column>\n                <Title>{loading ? \"Loading...\" : data.movie.title}</Title>\n                {!loading && data.movie &&\n                    (<>\n                        <Subtitle>{data.movie.language} Â· {data.movie.rating}</Subtitle>\n                        <Description>{data.movie.description_intro}</Description>\n                    </>)\n                }\n            </Column>\n            <Poster bg={data && data.movie ? data.movie.medium_cover_image : \"\"}></Poster>\n        </Container>\n    )\n};","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"../routes/Home\";\nimport Detail from \"../routes/Detail\";\n\nfunction App() {\n  return <Router>\n    <Route exact path=\"/\" component={Home} />\n    <Route path=\"/:id\" component={Detail} />\n  </Router>\n}\n\nexport default App;\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n    uri: \"http://3.35.140.119:4000/\",\n    cache: new InMemoryCache(),\n});\n\nexport default client;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { ApolloProvider } from '@apollo/client/react';\nimport client from \"./apollo\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}